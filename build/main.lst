ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              	.LFB237:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "adc.h"
  23:Core/Src/main.c **** #include "spi.h"
  24:Core/Src/main.c **** #include "tim.h"
  25:Core/Src/main.c **** #include "usart.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** #include "mb.h"
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 2


  31:Core/Src/main.c **** #include "mbport.h"
  32:Core/Src/main.c **** #include "user_mb_app.h"
  33:Core/Src/main.c **** #include "ReceiveTransmit.h"
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END Includes */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PD */
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****   * @brief  The application entry point.
  70:Core/Src/main.c ****   * @retval int
  71:Core/Src/main.c ****   */
  72:Core/Src/main.c **** int main(void)
  73:Core/Src/main.c **** {
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****   HAL_Init();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Configure the system clock */
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 3


  88:Core/Src/main.c ****   SystemClock_Config();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_ADC1_Init();
  97:Core/Src/main.c ****   MX_SPI1_Init();
  98:Core/Src/main.c ****   MX_SPI2_Init();
  99:Core/Src/main.c ****   MX_TIM3_Init();
 100:Core/Src/main.c ****   MX_TIM4_Init();
 101:Core/Src/main.c ****   MX_USART1_UART_Init();
 102:Core/Src/main.c ****   MX_USART2_UART_Init();
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 104:Core/Src/main.c ****   eMBInit(MB_RTU, 1, &huart2, 115200, &htim4);
 105:Core/Src/main.c **** 	eMBEnable();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim3);
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Infinite loop */
 112:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 113:Core/Src/main.c ****   while (1)
 114:Core/Src/main.c ****   {
 115:Core/Src/main.c ****     HAL_Delay(20);
 116:Core/Src/main.c ****     eMBPoll();
 117:Core/Src/main.c ****     /* USER CODE END WHILE */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 120:Core/Src/main.c ****   }
 121:Core/Src/main.c ****   /* USER CODE END 3 */
 122:Core/Src/main.c **** }
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /**
 125:Core/Src/main.c ****   * @brief System Clock Configuration
 126:Core/Src/main.c ****   * @retval None
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c **** void SystemClock_Config(void)
 129:Core/Src/main.c **** {
 130:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 131:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 136:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 137:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 138:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 139:Core/Src/main.c ****   */
 140:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 4


 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 148:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     Error_Handler();
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c **** }
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** /* USER CODE END 4 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 173:Core/Src/main.c ****   * @retval None
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c **** void Error_Handler(void)
 176:Core/Src/main.c **** {
  29              		.loc 1 176 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 177:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 178:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 179:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 179 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 5


  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 6


  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 7


 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 180:Core/Src/main.c ****   while (1)
  51              		.loc 1 180 3 discriminator 1 view .LVU4
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****   }
  52              		.loc 1 182 3 discriminator 1 view .LVU5
 180:Core/Src/main.c ****   while (1)
  53              		.loc 1 180 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE237:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	SystemClock_Config:
  67              	.LFB236:
 129:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  68              		.loc 1 129 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 80
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 00B5     		push	{lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 14, -4
  76 0002 95B0     		sub	sp, sp, #84
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 8


  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 88
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 130 3 view .LVU8
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  80              		.loc 1 130 22 is_stmt 0 view .LVU9
  81 0004 3022     		movs	r2, #48
  82 0006 0021     		movs	r1, #0
  83 0008 08A8     		add	r0, sp, #32
  84 000a FFF7FEFF 		bl	memset
  85              	.LVL0:
 131:Core/Src/main.c **** 
  86              		.loc 1 131 3 is_stmt 1 view .LVU10
 131:Core/Src/main.c **** 
  87              		.loc 1 131 22 is_stmt 0 view .LVU11
  88 000e 0023     		movs	r3, #0
  89 0010 0393     		str	r3, [sp, #12]
  90 0012 0493     		str	r3, [sp, #16]
  91 0014 0593     		str	r3, [sp, #20]
  92 0016 0693     		str	r3, [sp, #24]
  93 0018 0793     		str	r3, [sp, #28]
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  94              		.loc 1 135 3 is_stmt 1 view .LVU12
  95              	.LBB6:
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  96              		.loc 1 135 3 view .LVU13
  97 001a 0193     		str	r3, [sp, #4]
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  98              		.loc 1 135 3 view .LVU14
  99 001c 1E4A     		ldr	r2, .L9
 100 001e 116C     		ldr	r1, [r2, #64]
 101 0020 41F08051 		orr	r1, r1, #268435456
 102 0024 1164     		str	r1, [r2, #64]
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 103              		.loc 1 135 3 view .LVU15
 104 0026 126C     		ldr	r2, [r2, #64]
 105 0028 02F08052 		and	r2, r2, #268435456
 106 002c 0192     		str	r2, [sp, #4]
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 107              		.loc 1 135 3 view .LVU16
 108 002e 019A     		ldr	r2, [sp, #4]
 109              	.LBE6:
 135:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 110              		.loc 1 135 3 view .LVU17
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 111              		.loc 1 136 3 view .LVU18
 112              	.LBB7:
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 113              		.loc 1 136 3 view .LVU19
 114 0030 0293     		str	r3, [sp, #8]
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 115              		.loc 1 136 3 view .LVU20
 116 0032 1A4B     		ldr	r3, .L9+4
 117 0034 1A68     		ldr	r2, [r3]
 118 0036 42F48042 		orr	r2, r2, #16384
 119 003a 1A60     		str	r2, [r3]
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 9


 120              		.loc 1 136 3 view .LVU21
 121 003c 1B68     		ldr	r3, [r3]
 122 003e 03F48043 		and	r3, r3, #16384
 123 0042 0293     		str	r3, [sp, #8]
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 124              		.loc 1 136 3 view .LVU22
 125 0044 029B     		ldr	r3, [sp, #8]
 126              	.LBE7:
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 127              		.loc 1 136 3 view .LVU23
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 128              		.loc 1 140 3 view .LVU24
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 129              		.loc 1 140 36 is_stmt 0 view .LVU25
 130 0046 0123     		movs	r3, #1
 131 0048 0893     		str	r3, [sp, #32]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 132              		.loc 1 141 3 is_stmt 1 view .LVU26
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133              		.loc 1 141 30 is_stmt 0 view .LVU27
 134 004a 4FF48033 		mov	r3, #65536
 135 004e 0993     		str	r3, [sp, #36]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 136              		.loc 1 142 3 is_stmt 1 view .LVU28
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 137              		.loc 1 142 34 is_stmt 0 view .LVU29
 138 0050 0223     		movs	r3, #2
 139 0052 0E93     		str	r3, [sp, #56]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 140              		.loc 1 143 3 is_stmt 1 view .LVU30
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 141              		.loc 1 143 35 is_stmt 0 view .LVU31
 142 0054 4FF48003 		mov	r3, #4194304
 143 0058 0F93     		str	r3, [sp, #60]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 144              		.loc 1 144 3 is_stmt 1 view .LVU32
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 145              		.loc 1 144 30 is_stmt 0 view .LVU33
 146 005a 0823     		movs	r3, #8
 147 005c 1093     		str	r3, [sp, #64]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 148              		.loc 1 145 3 is_stmt 1 view .LVU34
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 149              		.loc 1 145 30 is_stmt 0 view .LVU35
 150 005e C023     		movs	r3, #192
 151 0060 1193     		str	r3, [sp, #68]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 152              		.loc 1 146 3 is_stmt 1 view .LVU36
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 153              		.loc 1 146 30 is_stmt 0 view .LVU37
 154 0062 0423     		movs	r3, #4
 155 0064 1293     		str	r3, [sp, #72]
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 156              		.loc 1 147 3 is_stmt 1 view .LVU38
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 157              		.loc 1 147 30 is_stmt 0 view .LVU39
 158 0066 1393     		str	r3, [sp, #76]
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 10


 148:Core/Src/main.c ****   {
 159              		.loc 1 148 3 is_stmt 1 view .LVU40
 148:Core/Src/main.c ****   {
 160              		.loc 1 148 7 is_stmt 0 view .LVU41
 161 0068 08A8     		add	r0, sp, #32
 162 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 163              	.LVL1:
 148:Core/Src/main.c ****   {
 164              		.loc 1 148 6 view .LVU42
 165 006e 78B9     		cbnz	r0, .L7
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 166              		.loc 1 154 3 is_stmt 1 view .LVU43
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 167              		.loc 1 154 31 is_stmt 0 view .LVU44
 168 0070 0F23     		movs	r3, #15
 169 0072 0393     		str	r3, [sp, #12]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 170              		.loc 1 156 3 is_stmt 1 view .LVU45
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 171              		.loc 1 156 34 is_stmt 0 view .LVU46
 172 0074 0223     		movs	r3, #2
 173 0076 0493     		str	r3, [sp, #16]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 174              		.loc 1 157 3 is_stmt 1 view .LVU47
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 175              		.loc 1 157 35 is_stmt 0 view .LVU48
 176 0078 8023     		movs	r3, #128
 177 007a 0593     		str	r3, [sp, #20]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 178              		.loc 1 158 3 is_stmt 1 view .LVU49
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 179              		.loc 1 158 36 is_stmt 0 view .LVU50
 180 007c 0021     		movs	r1, #0
 181 007e 0691     		str	r1, [sp, #24]
 159:Core/Src/main.c **** 
 182              		.loc 1 159 3 is_stmt 1 view .LVU51
 159:Core/Src/main.c **** 
 183              		.loc 1 159 36 is_stmt 0 view .LVU52
 184 0080 0791     		str	r1, [sp, #28]
 161:Core/Src/main.c ****   {
 185              		.loc 1 161 3 is_stmt 1 view .LVU53
 161:Core/Src/main.c ****   {
 186              		.loc 1 161 7 is_stmt 0 view .LVU54
 187 0082 03A8     		add	r0, sp, #12
 188 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 189              	.LVL2:
 161:Core/Src/main.c ****   {
 190              		.loc 1 161 6 view .LVU55
 191 0088 20B9     		cbnz	r0, .L8
 165:Core/Src/main.c **** 
 192              		.loc 1 165 1 view .LVU56
 193 008a 15B0     		add	sp, sp, #84
 194              	.LCFI2:
 195              		.cfi_remember_state
 196              		.cfi_def_cfa_offset 4
 197              		@ sp needed
 198 008c 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 11


 199              	.L7:
 200              	.LCFI3:
 201              		.cfi_restore_state
 150:Core/Src/main.c ****   }
 202              		.loc 1 150 5 is_stmt 1 view .LVU57
 203 0090 FFF7FEFF 		bl	Error_Handler
 204              	.LVL3:
 205              	.L8:
 163:Core/Src/main.c ****   }
 206              		.loc 1 163 5 view .LVU58
 207 0094 FFF7FEFF 		bl	Error_Handler
 208              	.LVL4:
 209              	.L10:
 210              		.align	2
 211              	.L9:
 212 0098 00380240 		.word	1073887232
 213 009c 00700040 		.word	1073770496
 214              		.cfi_endproc
 215              	.LFE236:
 217              		.section	.text.main,"ax",%progbits
 218              		.align	1
 219              		.global	main
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv4-sp-d16
 225              	main:
 226              	.LFB235:
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 227              		.loc 1 73 1 view -0
 228              		.cfi_startproc
 229              		@ Volatile: function does not return.
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 00B5     		push	{lr}
 233              	.LCFI4:
 234              		.cfi_def_cfa_offset 4
 235              		.cfi_offset 14, -4
 236 0002 83B0     		sub	sp, sp, #12
 237              	.LCFI5:
 238              		.cfi_def_cfa_offset 16
  81:Core/Src/main.c **** 
 239              		.loc 1 81 3 view .LVU60
 240 0004 FFF7FEFF 		bl	HAL_Init
 241              	.LVL5:
  88:Core/Src/main.c **** 
 242              		.loc 1 88 3 view .LVU61
 243 0008 FFF7FEFF 		bl	SystemClock_Config
 244              	.LVL6:
  95:Core/Src/main.c ****   MX_ADC1_Init();
 245              		.loc 1 95 3 view .LVU62
 246 000c FFF7FEFF 		bl	MX_GPIO_Init
 247              	.LVL7:
  96:Core/Src/main.c ****   MX_SPI1_Init();
 248              		.loc 1 96 3 view .LVU63
 249 0010 FFF7FEFF 		bl	MX_ADC1_Init
 250              	.LVL8:
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 12


  97:Core/Src/main.c ****   MX_SPI2_Init();
 251              		.loc 1 97 3 view .LVU64
 252 0014 FFF7FEFF 		bl	MX_SPI1_Init
 253              	.LVL9:
  98:Core/Src/main.c ****   MX_TIM3_Init();
 254              		.loc 1 98 3 view .LVU65
 255 0018 FFF7FEFF 		bl	MX_SPI2_Init
 256              	.LVL10:
  99:Core/Src/main.c ****   MX_TIM4_Init();
 257              		.loc 1 99 3 view .LVU66
 258 001c FFF7FEFF 		bl	MX_TIM3_Init
 259              	.LVL11:
 100:Core/Src/main.c ****   MX_USART1_UART_Init();
 260              		.loc 1 100 3 view .LVU67
 261 0020 FFF7FEFF 		bl	MX_TIM4_Init
 262              	.LVL12:
 101:Core/Src/main.c ****   MX_USART2_UART_Init();
 263              		.loc 1 101 3 view .LVU68
 264 0024 FFF7FEFF 		bl	MX_USART1_UART_Init
 265              	.LVL13:
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 266              		.loc 1 102 3 view .LVU69
 267 0028 FFF7FEFF 		bl	MX_USART2_UART_Init
 268              	.LVL14:
 104:Core/Src/main.c **** 	eMBEnable();
 269              		.loc 1 104 3 view .LVU70
 270 002c 094B     		ldr	r3, .L14
 271 002e 0093     		str	r3, [sp]
 272 0030 4FF4E133 		mov	r3, #115200
 273 0034 084A     		ldr	r2, .L14+4
 274 0036 0121     		movs	r1, #1
 275 0038 0020     		movs	r0, #0
 276 003a FFF7FEFF 		bl	eMBInit
 277              	.LVL15:
 105:Core/Src/main.c **** 
 278              		.loc 1 105 2 view .LVU71
 279 003e FFF7FEFF 		bl	eMBEnable
 280              	.LVL16:
 107:Core/Src/main.c **** 
 281              		.loc 1 107 3 view .LVU72
 282 0042 0648     		ldr	r0, .L14+8
 283 0044 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 284              	.LVL17:
 285              	.L12:
 113:Core/Src/main.c ****   {
 286              		.loc 1 113 3 discriminator 1 view .LVU73
 115:Core/Src/main.c ****     eMBPoll();
 287              		.loc 1 115 5 discriminator 1 view .LVU74
 288 0048 1420     		movs	r0, #20
 289 004a FFF7FEFF 		bl	HAL_Delay
 290              	.LVL18:
 116:Core/Src/main.c ****     /* USER CODE END WHILE */
 291              		.loc 1 116 5 discriminator 1 view .LVU75
 292 004e FFF7FEFF 		bl	eMBPoll
 293              	.LVL19:
 113:Core/Src/main.c ****   {
 294              		.loc 1 113 9 discriminator 1 view .LVU76
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 13


 295 0052 F9E7     		b	.L12
 296              	.L15:
 297              		.align	2
 298              	.L14:
 299 0054 00000000 		.word	htim4
 300 0058 00000000 		.word	huart2
 301 005c 00000000 		.word	htim3
 302              		.cfi_endproc
 303              	.LFE235:
 305              		.text
 306              	.Letext0:
 307              		.file 3 "c:\\vscodeproject\\software\\arm_gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 308              		.file 4 "c:\\vscodeproject\\software\\arm_gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 309              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 310              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 311              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 312              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 313              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 314              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 315              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 316              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 317              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 318              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 319              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 320              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 321              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 322              		.file 18 "Core/Inc/adc.h"
 323              		.file 19 "Core/Inc/spi.h"
 324              		.file 20 "Core/Inc/tim.h"
 325              		.file 21 "Core/Inc/usart.h"
 326              		.file 22 "Drivers/FreeModbus/port/port.h"
 327              		.file 23 "Drivers/FreeModbus/include/mbport.h"
 328              		.file 24 "Drivers/FreeModbus/include/mb.h"
 329              		.file 25 "c:\\vscodeproject\\software\\arm_gcc\\arm-none-eabi\\include\\sys\\lock.h"
 330              		.file 26 "c:\\vscodeproject\\software\\arm_gcc\\arm-none-eabi\\include\\sys\\_types.h"
 331              		.file 27 "c:\\vscodeproject\\software\\arm_gcc\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 332              		.file 28 "c:\\vscodeproject\\software\\arm_gcc\\arm-none-eabi\\include\\sys\\reent.h"
 333              		.file 29 "Core/Inc/gpio.h"
 334              		.file 30 "<built-in>"
ARM GAS  C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s:18     .text.Error_Handler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s:26     .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s:59     .text.SystemClock_Config:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s:66     .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s:212    .text.SystemClock_Config:0000000000000098 $d
C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s:218    .text.main:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s:225    .text.main:0000000000000000 main
C:\Users\Andre\AppData\Local\Temp\cctmNmCo.s:299    .text.main:0000000000000054 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_SPI1_Init
MX_SPI2_Init
MX_TIM3_Init
MX_TIM4_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
eMBInit
eMBEnable
HAL_TIM_Base_Start_IT
HAL_Delay
eMBPoll
htim4
huart2
htim3
