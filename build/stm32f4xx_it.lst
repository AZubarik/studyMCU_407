ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB235:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** #include "ReceiveTransmit.h"
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** #define tV_25   0.76            // –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ (–≤ –≤–æ–ª—å—Ç–∞—Ö) –Ω–∞ –¥–∞—Ç—á–∏–∫–µ –ø—
  29:Core/Src/stm32f4xx_it.c **** #define tSlope  0.0025          // –?–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è (–≤ –≤–æ–ª—å—Ç–∞—Ö) –ø—Ä
  30:Core/Src/stm32f4xx_it.c **** #define Vref    3.3             // –û–±—Ä–∞–∑—Ü–æ–≤–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –ê–¶–ü (–≤ –≤–æ–ª—å—Ç–
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  35:Core/Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc1;
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** extern uint16_t usSRegInBuf[];
  38:Core/Src/stm32f4xx_it.c **** extern uint16_t usSRegHoldBuf[];
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  44:Core/Src/stm32f4xx_it.c **** float Result = 0, voltageADC = 0, meanADC = 0, AverageADC = 0;
  45:Core/Src/stm32f4xx_it.c **** float temp;
  46:Core/Src/stm32f4xx_it.c **** uint16_t MassifADC[5];
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  59:Core/Src/stm32f4xx_it.c **** 
  60:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  62:Core/Src/stm32f4xx_it.c **** 
  63:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  64:Core/Src/stm32f4xx_it.c **** 
  65:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  66:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  67:Core/Src/stm32f4xx_it.c **** 
  68:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  69:Core/Src/stm32f4xx_it.c **** 
  70:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  71:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim3;
  72:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim4;
  73:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  74:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  75:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  76:Core/Src/stm32f4xx_it.c **** 
  77:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  78:Core/Src/stm32f4xx_it.c **** 
  79:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  80:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  81:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  82:Core/Src/stm32f4xx_it.c **** /**
  83:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  84:Core/Src/stm32f4xx_it.c ****   */
  85:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  86:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 86 1 view -0
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 3


  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  87:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  88:Core/Src/stm32f4xx_it.c **** 
  89:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  90:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  91:Core/Src/stm32f4xx_it.c ****   while (1)
  36              		.loc 1 91 3 discriminator 1 view .LVU1
  92:Core/Src/stm32f4xx_it.c ****   {
  93:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 93 3 discriminator 1 view .LVU2
  91:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 91 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE235:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	HardFault_Handler:
  52              	.LFB236:
  94:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  95:Core/Src/stm32f4xx_it.c **** }
  96:Core/Src/stm32f4xx_it.c **** 
  97:Core/Src/stm32f4xx_it.c **** /**
  98:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  99:Core/Src/stm32f4xx_it.c ****   */
 100:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
 101:Core/Src/stm32f4xx_it.c **** {
  53              		.loc 1 101 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
 102:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 103:Core/Src/stm32f4xx_it.c **** 
 104:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 105:Core/Src/stm32f4xx_it.c ****   while (1)
  60              		.loc 1 105 3 discriminator 1 view .LVU5
 106:Core/Src/stm32f4xx_it.c ****   {
 107:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 108:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 109:Core/Src/stm32f4xx_it.c ****   }
  61              		.loc 1 109 3 discriminator 1 view .LVU6
 105:Core/Src/stm32f4xx_it.c ****   {
  62              		.loc 1 105 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 4


  64              		.cfi_endproc
  65              	.LFE236:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	MemManage_Handler:
  76              	.LFB237:
 110:Core/Src/stm32f4xx_it.c **** }
 111:Core/Src/stm32f4xx_it.c **** 
 112:Core/Src/stm32f4xx_it.c **** /**
 113:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 114:Core/Src/stm32f4xx_it.c ****   */
 115:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 116:Core/Src/stm32f4xx_it.c **** {
  77              		.loc 1 116 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L6:
 117:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 118:Core/Src/stm32f4xx_it.c **** 
 119:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 120:Core/Src/stm32f4xx_it.c ****   while (1)
  84              		.loc 1 120 3 discriminator 1 view .LVU9
 121:Core/Src/stm32f4xx_it.c ****   {
 122:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 123:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 124:Core/Src/stm32f4xx_it.c ****   }
  85              		.loc 1 124 3 discriminator 1 view .LVU10
 120:Core/Src/stm32f4xx_it.c ****   {
  86              		.loc 1 120 9 discriminator 1 view .LVU11
  87 0000 FEE7     		b	.L6
  88              		.cfi_endproc
  89              	.LFE237:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	BusFault_Handler:
 100              	.LFB238:
 125:Core/Src/stm32f4xx_it.c **** }
 126:Core/Src/stm32f4xx_it.c **** 
 127:Core/Src/stm32f4xx_it.c **** /**
 128:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 129:Core/Src/stm32f4xx_it.c ****   */
 130:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 131:Core/Src/stm32f4xx_it.c **** {
 101              		.loc 1 131 1 view -0
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 5


 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L8:
 132:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 133:Core/Src/stm32f4xx_it.c **** 
 134:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 135:Core/Src/stm32f4xx_it.c ****   while (1)
 108              		.loc 1 135 3 discriminator 1 view .LVU13
 136:Core/Src/stm32f4xx_it.c ****   {
 137:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 138:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 139:Core/Src/stm32f4xx_it.c ****   }
 109              		.loc 1 139 3 discriminator 1 view .LVU14
 135:Core/Src/stm32f4xx_it.c ****   {
 110              		.loc 1 135 9 discriminator 1 view .LVU15
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE238:
 115              		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	UsageFault_Handler:
 124              	.LFB239:
 140:Core/Src/stm32f4xx_it.c **** }
 141:Core/Src/stm32f4xx_it.c **** 
 142:Core/Src/stm32f4xx_it.c **** /**
 143:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 144:Core/Src/stm32f4xx_it.c ****   */
 145:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 146:Core/Src/stm32f4xx_it.c **** {
 125              		.loc 1 146 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L10:
 147:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 148:Core/Src/stm32f4xx_it.c **** 
 149:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 150:Core/Src/stm32f4xx_it.c ****   while (1)
 132              		.loc 1 150 3 discriminator 1 view .LVU17
 151:Core/Src/stm32f4xx_it.c ****   {
 152:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 153:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 154:Core/Src/stm32f4xx_it.c ****   }
 133              		.loc 1 154 3 discriminator 1 view .LVU18
 150:Core/Src/stm32f4xx_it.c ****   {
 134              		.loc 1 150 9 discriminator 1 view .LVU19
 135 0000 FEE7     		b	.L10
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 6


 136              		.cfi_endproc
 137              	.LFE239:
 139              		.section	.text.SVC_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	SVC_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	SVC_Handler:
 148              	.LFB240:
 155:Core/Src/stm32f4xx_it.c **** }
 156:Core/Src/stm32f4xx_it.c **** 
 157:Core/Src/stm32f4xx_it.c **** /**
 158:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 159:Core/Src/stm32f4xx_it.c ****   */
 160:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 161:Core/Src/stm32f4xx_it.c **** {
 149              		.loc 1 161 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 162:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 163:Core/Src/stm32f4xx_it.c **** 
 164:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 165:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 166:Core/Src/stm32f4xx_it.c **** 
 167:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 168:Core/Src/stm32f4xx_it.c **** }
 154              		.loc 1 168 1 view .LVU21
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE240:
 159              		.section	.text.DebugMon_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	DebugMon_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	DebugMon_Handler:
 168              	.LFB241:
 169:Core/Src/stm32f4xx_it.c **** 
 170:Core/Src/stm32f4xx_it.c **** /**
 171:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 172:Core/Src/stm32f4xx_it.c ****   */
 173:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 174:Core/Src/stm32f4xx_it.c **** {
 169              		.loc 1 174 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 175:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 176:Core/Src/stm32f4xx_it.c **** 
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 7


 178:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 179:Core/Src/stm32f4xx_it.c **** 
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 181:Core/Src/stm32f4xx_it.c **** }
 174              		.loc 1 181 1 view .LVU23
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE241:
 179              		.section	.text.PendSV_Handler,"ax",%progbits
 180              		.align	1
 181              		.global	PendSV_Handler
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
 187              	PendSV_Handler:
 188              	.LFB242:
 182:Core/Src/stm32f4xx_it.c **** 
 183:Core/Src/stm32f4xx_it.c **** /**
 184:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 185:Core/Src/stm32f4xx_it.c ****   */
 186:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 187:Core/Src/stm32f4xx_it.c **** {
 189              		.loc 1 187 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 188:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 189:Core/Src/stm32f4xx_it.c **** 
 190:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 191:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 192:Core/Src/stm32f4xx_it.c **** 
 193:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 194:Core/Src/stm32f4xx_it.c **** }
 194              		.loc 1 194 1 view .LVU25
 195 0000 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE242:
 199              		.section	.text.SysTick_Handler,"ax",%progbits
 200              		.align	1
 201              		.global	SysTick_Handler
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	SysTick_Handler:
 208              	.LFB243:
 195:Core/Src/stm32f4xx_it.c **** 
 196:Core/Src/stm32f4xx_it.c **** /**
 197:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 198:Core/Src/stm32f4xx_it.c ****   */
 199:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 200:Core/Src/stm32f4xx_it.c **** {
 209              		.loc 1 200 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 8


 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI0:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 201:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 202:Core/Src/stm32f4xx_it.c **** 
 203:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 204:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 218              		.loc 1 204 3 view .LVU27
 219 0002 FFF7FEFF 		bl	HAL_IncTick
 220              	.LVL0:
 205:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 206:Core/Src/stm32f4xx_it.c **** 
 207:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 208:Core/Src/stm32f4xx_it.c **** }
 221              		.loc 1 208 1 is_stmt 0 view .LVU28
 222 0006 08BD     		pop	{r3, pc}
 223              		.cfi_endproc
 224              	.LFE243:
 226              		.global	__aeabi_f2d
 227              		.global	__aeabi_dmul
 228              		.global	__aeabi_d2f
 229              		.global	__aeabi_dsub
 230              		.global	__aeabi_ddiv
 231              		.global	__aeabi_dadd
 232              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 233              		.align	1
 234              		.global	TIM3_IRQHandler
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv4-sp-d16
 240              	TIM3_IRQHandler:
 241              	.LFB244:
 209:Core/Src/stm32f4xx_it.c **** 
 210:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 211:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 212:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 213:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 214:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 215:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 216:Core/Src/stm32f4xx_it.c **** 
 217:Core/Src/stm32f4xx_it.c **** /**
 218:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 219:Core/Src/stm32f4xx_it.c ****   */
 220:Core/Src/stm32f4xx_it.c **** void TIM3_IRQHandler(void)
 221:Core/Src/stm32f4xx_it.c **** {
 242              		.loc 1 221 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 38B5     		push	{r3, r4, r5, lr}
 247              	.LCFI1:
 248              		.cfi_def_cfa_offset 16
 249              		.cfi_offset 3, -16
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 9


 250              		.cfi_offset 4, -12
 251              		.cfi_offset 5, -8
 252              		.cfi_offset 14, -4
 222:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 223:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_1);
 253              		.loc 1 223 3 view .LVU30
 254 0002 0221     		movs	r1, #2
 255 0004 4448     		ldr	r0, .L26+24
 256 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 257              	.LVL1:
 224:Core/Src/stm32f4xx_it.c ****   for (int i = 0; i < 5; i++) {
 258              		.loc 1 224 3 view .LVU31
 259              	.LBB2:
 260              		.loc 1 224 8 view .LVU32
 261              		.loc 1 224 12 is_stmt 0 view .LVU33
 262 000a 0024     		movs	r4, #0
 263              		.loc 1 224 3 view .LVU34
 264 000c 14E0     		b	.L17
 265              	.LVL2:
 266              	.L24:
 225:Core/Src/stm32f4xx_it.c ****     HAL_ADC_Start(&hadc1);
 226:Core/Src/stm32f4xx_it.c ****     if (HAL_ADC_PollForConversion(&hadc1, 100) == HAL_OK) {   // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–
 227:Core/Src/stm32f4xx_it.c ****       Result = HAL_ADC_GetValue(&hadc1);                      // –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ —Å –ê–¶–ü.
 267              		.loc 1 227 7 is_stmt 1 view .LVU35
 268              		.loc 1 227 16 is_stmt 0 view .LVU36
 269 000e 2846     		mov	r0, r5
 270 0010 FFF7FEFF 		bl	HAL_ADC_GetValue
 271              	.LVL3:
 272 0014 07EE900A 		vmov	s15, r0	@ int
 273              		.loc 1 227 14 view .LVU37
 274 0018 F8EE677A 		vcvt.f32.u32	s15, s15
 275 001c 3F4B     		ldr	r3, .L26+28
 276 001e C3ED007A 		vstr.32	s15, [r3]
 228:Core/Src/stm32f4xx_it.c ****       MassifADC[i] = Result;
 277              		.loc 1 228 7 is_stmt 1 view .LVU38
 278              		.loc 1 228 20 is_stmt 0 view .LVU39
 279 0022 FCEEE77A 		vcvt.u32.f32	s15, s15
 280 0026 3E4B     		ldr	r3, .L26+32
 281 0028 17EE902A 		vmov	r2, s15	@ int
 282 002c 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 229:Core/Src/stm32f4xx_it.c ****       HAL_ADC_Stop(&hadc1);                                   // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ê–¶–ü.
 283              		.loc 1 229 7 is_stmt 1 view .LVU40
 284 0030 2846     		mov	r0, r5
 285 0032 FFF7FEFF 		bl	HAL_ADC_Stop
 286              	.LVL4:
 287              	.L18:
 224:Core/Src/stm32f4xx_it.c ****     HAL_ADC_Start(&hadc1);
 288              		.loc 1 224 26 discriminator 2 view .LVU41
 224:Core/Src/stm32f4xx_it.c ****     HAL_ADC_Start(&hadc1);
 289              		.loc 1 224 27 is_stmt 0 discriminator 2 view .LVU42
 290 0036 0134     		adds	r4, r4, #1
 291              	.LVL5:
 292              	.L17:
 224:Core/Src/stm32f4xx_it.c ****     HAL_ADC_Start(&hadc1);
 293              		.loc 1 224 19 is_stmt 1 discriminator 1 view .LVU43
 224:Core/Src/stm32f4xx_it.c ****     HAL_ADC_Start(&hadc1);
 294              		.loc 1 224 3 is_stmt 0 discriminator 1 view .LVU44
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 10


 295 0038 042C     		cmp	r4, #4
 296 003a 0ADC     		bgt	.L23
 225:Core/Src/stm32f4xx_it.c ****     if (HAL_ADC_PollForConversion(&hadc1, 100) == HAL_OK) {   // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–
 297              		.loc 1 225 5 is_stmt 1 view .LVU45
 298 003c 394D     		ldr	r5, .L26+36
 299 003e 2846     		mov	r0, r5
 300 0040 FFF7FEFF 		bl	HAL_ADC_Start
 301              	.LVL6:
 226:Core/Src/stm32f4xx_it.c ****       Result = HAL_ADC_GetValue(&hadc1);                      // –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ —Å –ê–¶–ü.
 302              		.loc 1 226 5 view .LVU46
 226:Core/Src/stm32f4xx_it.c ****       Result = HAL_ADC_GetValue(&hadc1);                      // –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ —Å –ê–¶–ü.
 303              		.loc 1 226 9 is_stmt 0 view .LVU47
 304 0044 6421     		movs	r1, #100
 305 0046 2846     		mov	r0, r5
 306 0048 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 307              	.LVL7:
 226:Core/Src/stm32f4xx_it.c ****       Result = HAL_ADC_GetValue(&hadc1);                      // –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ —Å –ê–¶–ü.
 308              		.loc 1 226 8 view .LVU48
 309 004c 0028     		cmp	r0, #0
 310 004e F2D1     		bne	.L18
 311 0050 DDE7     		b	.L24
 312              	.L23:
 313              	.LBE2:
 230:Core/Src/stm32f4xx_it.c ****     }
 231:Core/Src/stm32f4xx_it.c ****   }
 232:Core/Src/stm32f4xx_it.c ****   AverageADC = 0;
 314              		.loc 1 232 3 is_stmt 1 view .LVU49
 315              		.loc 1 232 14 is_stmt 0 view .LVU50
 316 0052 354B     		ldr	r3, .L26+40
 317 0054 0022     		movs	r2, #0
 318 0056 1A60     		str	r2, [r3]	@ float
 233:Core/Src/stm32f4xx_it.c ****   for (int j = 0; j < 5; j++) {
 319              		.loc 1 233 3 is_stmt 1 view .LVU51
 320              	.LBB3:
 321              		.loc 1 233 8 view .LVU52
 322              	.LVL8:
 323              		.loc 1 233 12 is_stmt 0 view .LVU53
 324 0058 0023     		movs	r3, #0
 325              	.LVL9:
 326              	.L20:
 327              		.loc 1 233 19 is_stmt 1 discriminator 1 view .LVU54
 328              		.loc 1 233 3 is_stmt 0 discriminator 1 view .LVU55
 329 005a 042B     		cmp	r3, #4
 330 005c 0FDC     		bgt	.L25
 234:Core/Src/stm32f4xx_it.c ****     AverageADC += MassifADC[j];
 331              		.loc 1 234 5 is_stmt 1 discriminator 3 view .LVU56
 332              		.loc 1 234 28 is_stmt 0 discriminator 3 view .LVU57
 333 005e 304A     		ldr	r2, .L26+32
 334 0060 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 335 0064 07EE902A 		vmov	s15, r2	@ int
 336              		.loc 1 234 16 discriminator 3 view .LVU58
 337 0068 2F4A     		ldr	r2, .L26+40
 338 006a F8EEE77A 		vcvt.f32.s32	s15, s15
 339 006e 92ED007A 		vldr.32	s14, [r2]
 340 0072 77EE877A 		vadd.f32	s15, s15, s14
 341 0076 C2ED007A 		vstr.32	s15, [r2]
 233:Core/Src/stm32f4xx_it.c ****   for (int j = 0; j < 5; j++) {
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 11


 342              		.loc 1 233 26 is_stmt 1 discriminator 3 view .LVU59
 233:Core/Src/stm32f4xx_it.c ****   for (int j = 0; j < 5; j++) {
 343              		.loc 1 233 27 is_stmt 0 discriminator 3 view .LVU60
 344 007a 0133     		adds	r3, r3, #1
 345              	.LVL10:
 233:Core/Src/stm32f4xx_it.c ****   for (int j = 0; j < 5; j++) {
 346              		.loc 1 233 27 discriminator 3 view .LVU61
 347 007c EDE7     		b	.L20
 348              	.L25:
 233:Core/Src/stm32f4xx_it.c ****   for (int j = 0; j < 5; j++) {
 349              		.loc 1 233 27 discriminator 3 view .LVU62
 350              	.LBE3:
 235:Core/Src/stm32f4xx_it.c ****   }
 236:Core/Src/stm32f4xx_it.c ****   meanADC = AverageADC / 5;
 351              		.loc 1 236 3 is_stmt 1 view .LVU63
 352              		.loc 1 236 24 is_stmt 0 view .LVU64
 353 007e 2A4B     		ldr	r3, .L26+40
 354              	.LVL11:
 355              		.loc 1 236 24 view .LVU65
 356 0080 D3ED006A 		vldr.32	s13, [r3]
 357 0084 B1EE047A 		vmov.f32	s14, #5.0e+0
 358 0088 C6EE877A 		vdiv.f32	s15, s13, s14
 359              		.loc 1 236 11 view .LVU66
 360 008c 274B     		ldr	r3, .L26+44
 361 008e C3ED007A 		vstr.32	s15, [r3]
 237:Core/Src/stm32f4xx_it.c ****   voltageADC = (float) meanADC / 4096 * Vref;               // –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –≤ –≤–æ–ª—å—Ç–∞
 362              		.loc 1 237 3 is_stmt 1 view .LVU67
 363              		.loc 1 237 32 is_stmt 0 view .LVU68
 364 0092 9FED277A 		vldr.32	s14, .L26+48
 365 0096 67EE877A 		vmul.f32	s15, s15, s14
 366 009a 17EE900A 		vmov	r0, s15
 367 009e FFF7FEFF 		bl	__aeabi_f2d
 368              	.LVL12:
 369              		.loc 1 237 39 view .LVU69
 370 00a2 17A3     		adr	r3, .L26
 371 00a4 D3E90023 		ldrd	r2, [r3]
 372 00a8 FFF7FEFF 		bl	__aeabi_dmul
 373              	.LVL13:
 374 00ac FFF7FEFF 		bl	__aeabi_d2f
 375              	.LVL14:
 376              		.loc 1 237 14 view .LVU70
 377 00b0 204B     		ldr	r3, .L26+52
 378 00b2 1860     		str	r0, [r3]	@ float
 238:Core/Src/stm32f4xx_it.c ****   temp = (voltageADC - tV_25) / tSlope + 25;                // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥—Ä–∞–¥—É
 379              		.loc 1 238 3 is_stmt 1 view .LVU71
 380              		.loc 1 238 22 is_stmt 0 view .LVU72
 381 00b4 FFF7FEFF 		bl	__aeabi_f2d
 382              	.LVL15:
 383 00b8 13A3     		adr	r3, .L26+8
 384 00ba D3E90023 		ldrd	r2, [r3]
 385 00be FFF7FEFF 		bl	__aeabi_dsub
 386              	.LVL16:
 387              		.loc 1 238 31 view .LVU73
 388 00c2 13A3     		adr	r3, .L26+16
 389 00c4 D3E90023 		ldrd	r2, [r3]
 390 00c8 FFF7FEFF 		bl	__aeabi_ddiv
 391              	.LVL17:
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 12


 392              		.loc 1 238 40 view .LVU74
 393 00cc 0022     		movs	r2, #0
 394 00ce 1A4B     		ldr	r3, .L26+56
 395 00d0 FFF7FEFF 		bl	__aeabi_dadd
 396              	.LVL18:
 397 00d4 FFF7FEFF 		bl	__aeabi_d2f
 398              	.LVL19:
 399 00d8 00EE100A 		vmov	s0, r0
 400              		.loc 1 238 8 view .LVU75
 401 00dc 174B     		ldr	r3, .L26+60
 402 00de 1860     		str	r0, [r3]	@ float
 239:Core/Src/stm32f4xx_it.c ****   Result = (float) temp;
 403              		.loc 1 239 3 is_stmt 1 view .LVU76
 404              		.loc 1 239 10 is_stmt 0 view .LVU77
 405 00e0 0E4B     		ldr	r3, .L26+28
 406 00e2 1860     		str	r0, [r3]	@ float
 240:Core/Src/stm32f4xx_it.c ****   dataTransmit(0, Result);                                  // –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö Modbus
 407              		.loc 1 240 3 is_stmt 1 view .LVU78
 408 00e4 0020     		movs	r0, #0
 409 00e6 FFF7FEFF 		bl	dataTransmit
 410              	.LVL20:
 241:Core/Src/stm32f4xx_it.c **** 
 242:Core/Src/stm32f4xx_it.c ****   usSRegInBuf[2] += 1;
 411              		.loc 1 242 3 view .LVU79
 412              		.loc 1 242 18 is_stmt 0 view .LVU80
 413 00ea 154A     		ldr	r2, .L26+64
 414 00ec 9388     		ldrh	r3, [r2, #4]
 415 00ee 0133     		adds	r3, r3, #1
 416 00f0 9380     		strh	r3, [r2, #4]	@ movhi
 243:Core/Src/stm32f4xx_it.c **** 
 244:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 245:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 417              		.loc 1 245 3 is_stmt 1 view .LVU81
 418 00f2 1448     		ldr	r0, .L26+68
 419 00f4 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 420              	.LVL21:
 246:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 247:Core/Src/stm32f4xx_it.c **** 
 248:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 249:Core/Src/stm32f4xx_it.c **** }
 421              		.loc 1 249 1 is_stmt 0 view .LVU82
 422 00f8 38BD     		pop	{r3, r4, r5, pc}
 423              	.LVL22:
 424              	.L27:
 425              		.loc 1 249 1 view .LVU83
 426 00fa 00BFAFF3 		.align	3
 426      0080
 427              	.L26:
 428 0100 66666666 		.word	1717986918
 429 0104 66660A40 		.word	1074423398
 430 0108 52B81E85 		.word	-2061584302
 431 010c EB51E83F 		.word	1072189931
 432 0110 7B14AE47 		.word	1202590843
 433 0114 E17A643F 		.word	1063549665
 434 0118 00000240 		.word	1073872896
 435 011c 00000000 		.word	.LANCHOR0
 436 0120 00000000 		.word	MassifADC
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 13


 437 0124 00000000 		.word	hadc1
 438 0128 00000000 		.word	.LANCHOR1
 439 012c 00000000 		.word	.LANCHOR2
 440 0130 00008039 		.word	964689920
 441 0134 00000000 		.word	.LANCHOR3
 442 0138 00003940 		.word	1077477376
 443 013c 00000000 		.word	temp
 444 0140 00000000 		.word	usSRegInBuf
 445 0144 00000000 		.word	htim3
 446              		.cfi_endproc
 447              	.LFE244:
 449              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 450              		.align	1
 451              		.global	TIM4_IRQHandler
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 455              		.fpu fpv4-sp-d16
 457              	TIM4_IRQHandler:
 458              	.LFB245:
 250:Core/Src/stm32f4xx_it.c **** 
 251:Core/Src/stm32f4xx_it.c **** /**
 252:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM4 global interrupt.
 253:Core/Src/stm32f4xx_it.c ****   */
 254:Core/Src/stm32f4xx_it.c **** void TIM4_IRQHandler(void)
 255:Core/Src/stm32f4xx_it.c **** {
 459              		.loc 1 255 1 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463 0000 08B5     		push	{r3, lr}
 464              	.LCFI2:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 3, -8
 467              		.cfi_offset 14, -4
 256:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 257:Core/Src/stm32f4xx_it.c **** 
 258:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 259:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 468              		.loc 1 259 3 view .LVU85
 469 0002 0248     		ldr	r0, .L30
 470 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 471              	.LVL23:
 260:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 261:Core/Src/stm32f4xx_it.c **** 
 262:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 263:Core/Src/stm32f4xx_it.c **** }
 472              		.loc 1 263 1 is_stmt 0 view .LVU86
 473 0008 08BD     		pop	{r3, pc}
 474              	.L31:
 475 000a 00BF     		.align	2
 476              	.L30:
 477 000c 00000000 		.word	htim4
 478              		.cfi_endproc
 479              	.LFE245:
 481              		.section	.text.USART1_IRQHandler,"ax",%progbits
 482              		.align	1
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 14


 483              		.global	USART1_IRQHandler
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 487              		.fpu fpv4-sp-d16
 489              	USART1_IRQHandler:
 490              	.LFB246:
 264:Core/Src/stm32f4xx_it.c **** 
 265:Core/Src/stm32f4xx_it.c **** /**
 266:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 267:Core/Src/stm32f4xx_it.c ****   */
 268:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 269:Core/Src/stm32f4xx_it.c **** {
 491              		.loc 1 269 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495 0000 08B5     		push	{r3, lr}
 496              	.LCFI3:
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 3, -8
 499              		.cfi_offset 14, -4
 270:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 271:Core/Src/stm32f4xx_it.c **** 
 272:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 273:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 500              		.loc 1 273 3 view .LVU88
 501 0002 0248     		ldr	r0, .L34
 502 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 503              	.LVL24:
 274:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 275:Core/Src/stm32f4xx_it.c **** 
 276:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 277:Core/Src/stm32f4xx_it.c **** }
 504              		.loc 1 277 1 is_stmt 0 view .LVU89
 505 0008 08BD     		pop	{r3, pc}
 506              	.L35:
 507 000a 00BF     		.align	2
 508              	.L34:
 509 000c 00000000 		.word	huart1
 510              		.cfi_endproc
 511              	.LFE246:
 513              		.section	.text.USART2_IRQHandler,"ax",%progbits
 514              		.align	1
 515              		.global	USART2_IRQHandler
 516              		.syntax unified
 517              		.thumb
 518              		.thumb_func
 519              		.fpu fpv4-sp-d16
 521              	USART2_IRQHandler:
 522              	.LFB247:
 278:Core/Src/stm32f4xx_it.c **** 
 279:Core/Src/stm32f4xx_it.c **** /**
 280:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART2 global interrupt.
 281:Core/Src/stm32f4xx_it.c ****   */
 282:Core/Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
 283:Core/Src/stm32f4xx_it.c **** {
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 15


 523              		.loc 1 283 1 is_stmt 1 view -0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527 0000 08B5     		push	{r3, lr}
 528              	.LCFI4:
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 3, -8
 531              		.cfi_offset 14, -4
 284:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 285:Core/Src/stm32f4xx_it.c **** 
 286:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 287:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 532              		.loc 1 287 3 view .LVU91
 533 0002 0248     		ldr	r0, .L38
 534 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 535              	.LVL25:
 288:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 289:Core/Src/stm32f4xx_it.c **** 
 290:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 291:Core/Src/stm32f4xx_it.c **** }
 536              		.loc 1 291 1 is_stmt 0 view .LVU92
 537 0008 08BD     		pop	{r3, pc}
 538              	.L39:
 539 000a 00BF     		.align	2
 540              	.L38:
 541 000c 00000000 		.word	huart2
 542              		.cfi_endproc
 543              	.LFE247:
 545              		.comm	MassifADC,10,4
 546              		.comm	temp,4,4
 547              		.global	AverageADC
 548              		.global	meanADC
 549              		.global	voltageADC
 550              		.global	Result
 551              		.section	.bss.AverageADC,"aw",%nobits
 552              		.align	2
 553              		.set	.LANCHOR1,. + 0
 556              	AverageADC:
 557 0000 00000000 		.space	4
 558              		.section	.bss.Result,"aw",%nobits
 559              		.align	2
 560              		.set	.LANCHOR0,. + 0
 563              	Result:
 564 0000 00000000 		.space	4
 565              		.section	.bss.meanADC,"aw",%nobits
 566              		.align	2
 567              		.set	.LANCHOR2,. + 0
 570              	meanADC:
 571 0000 00000000 		.space	4
 572              		.section	.bss.voltageADC,"aw",%nobits
 573              		.align	2
 574              		.set	.LANCHOR3,. + 0
 577              	voltageADC:
 578 0000 00000000 		.space	4
 579              		.text
 580              	.Letext0:
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 16


 581              		.file 2 "c:\\vscodeproject\\software\\arm_gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 582              		.file 3 "c:\\vscodeproject\\software\\arm_gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 583              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 584              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 585              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 586              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 587              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 588              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 589              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 590              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 591              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 592              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 593              		.file 14 "c:\\vscodeproject\\software\\arm_gcc\\arm-none-eabi\\include\\sys\\lock.h"
 594              		.file 15 "c:\\vscodeproject\\software\\arm_gcc\\arm-none-eabi\\include\\sys\\_types.h"
 595              		.file 16 "c:\\vscodeproject\\software\\arm_gcc\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 596              		.file 17 "c:\\vscodeproject\\software\\arm_gcc\\arm-none-eabi\\include\\sys\\reent.h"
 597              		.file 18 "Drivers/FreeModbus/port/port.h"
 598              		.file 19 "Drivers/FreeModbus/include/mbport.h"
 599              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 600              		.file 21 "Drivers/FreeModbus/ReceiveTransmit/ReceiveTransmit.h"
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:18     .text.NMI_Handler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:44     .text.HardFault_Handler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:51     .text.HardFault_Handler:0000000000000000 HardFault_Handler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:68     .text.MemManage_Handler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:75     .text.MemManage_Handler:0000000000000000 MemManage_Handler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:92     .text.BusFault_Handler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:99     .text.BusFault_Handler:0000000000000000 BusFault_Handler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:116    .text.UsageFault_Handler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:123    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:140    .text.SVC_Handler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:147    .text.SVC_Handler:0000000000000000 SVC_Handler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:160    .text.DebugMon_Handler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:167    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:180    .text.PendSV_Handler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:187    .text.PendSV_Handler:0000000000000000 PendSV_Handler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:200    .text.SysTick_Handler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:207    .text.SysTick_Handler:0000000000000000 SysTick_Handler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:233    .text.TIM3_IRQHandler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:240    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:428    .text.TIM3_IRQHandler:0000000000000100 $d
                            *COM*:000000000000000a MassifADC
                            *COM*:0000000000000004 temp
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:450    .text.TIM4_IRQHandler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:457    .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:477    .text.TIM4_IRQHandler:000000000000000c $d
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:482    .text.USART1_IRQHandler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:489    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:509    .text.USART1_IRQHandler:000000000000000c $d
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:514    .text.USART2_IRQHandler:0000000000000000 $t
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:521    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:541    .text.USART2_IRQHandler:000000000000000c $d
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:556    .bss.AverageADC:0000000000000000 AverageADC
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:570    .bss.meanADC:0000000000000000 meanADC
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:577    .bss.voltageADC:0000000000000000 voltageADC
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:563    .bss.Result:0000000000000000 Result
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:552    .bss.AverageADC:0000000000000000 $d
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:559    .bss.Result:0000000000000000 $d
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:566    .bss.meanADC:0000000000000000 $d
C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s:573    .bss.voltageADC:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
__aeabi_dsub
__aeabi_ddiv
__aeabi_dadd
HAL_GPIO_TogglePin
HAL_ADC_GetValue
HAL_ADC_Stop
HAL_ADC_Start
HAL_ADC_PollForConversion
dataTransmit
ARM GAS  C:\Users\Andre\AppData\Local\Temp\ccMbINQ8.s 			page 18


HAL_TIM_IRQHandler
hadc1
usSRegInBuf
htim3
htim4
HAL_UART_IRQHandler
huart1
huart2
